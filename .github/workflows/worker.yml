name: worker

on: 
  push:
    branches: [ worker ]

jobs:
  build:
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:11
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        # Set health checks to wait until postgress has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s         
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      minio:
        image: lazybit/minio        
        env:
          MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
          MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
        volumes:
          - ${{ github.workspace }}/data:/data
        options: --name=minio --health-cmd "curl http://localhost:9000/minio/health/live"
        ports:
          - 9000:9000

    runs-on: ubuntu-latest
    env:
      ## add secret on settings-secret-add new secret e.g name=POSTGRES_PASSWORD value=mypassword
      sanbercode2_database__password: ${{ secrets.POSTGRES_PASSWORD }}
      sanbercode2_database__database: ${{ secrets.POSTGRES_DB }}
    defaults:
      run:
        working-directory: ./tugas
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 12
        uses: actions/setup-node@v1
        with: 
          node-version: 12
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: npm install
      - run: npm run test:worker